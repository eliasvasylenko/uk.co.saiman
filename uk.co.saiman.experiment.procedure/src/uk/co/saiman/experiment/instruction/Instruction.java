/*
 * Copyright (C) 2019 Scientific Analysis Instruments Limited <contact@saiman.co.uk>
 *          ______         ___      ___________
 *       ,'========\     ,'===\    /========== \
 *      /== \___/== \  ,'==.== \   \__/== \___\/
 *     /==_/____\__\/,'==__|== |     /==  /
 *     \========`. ,'========= |    /==  /
 *   ___`-___)== ,'== \____|== |   /==  /
 *  /== \__.-==,'==  ,'    |== '__/==  /_
 *  \======== /==  ,'      |== ========= \
 *   \_____\.-\__\/        \__\\________\/
 *
 * This file is part of uk.co.saiman.experiment.procedure.
 *
 * uk.co.saiman.experiment.procedure is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * uk.co.saiman.experiment.procedure is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package uk.co.saiman.experiment.instruction;

import uk.co.saiman.experiment.graph.ExperimentId;
import uk.co.saiman.experiment.graph.ExperimentPath;
import uk.co.saiman.experiment.graph.ExperimentPath.Absolute;
import uk.co.saiman.experiment.procedure.Procedure;
import uk.co.saiman.experiment.production.Dependency;
import uk.co.saiman.experiment.variables.Variables;

/**
 * An experiment instruction is the machine-consumable unit of information to
 * describe how an experiment step should be
 * {@link Executor#execute(ExecutionContext) executed}.
 * <p>
 * An experiment instruction corresponds to a node in an experiment graph, and
 * should typically be processed as part of a {@link Procedure procedure}.
 * <p>
 * For information about the experiment graph, @see
 * uk.co.saiman.experiment.procedure
 * <p>
 * Generally instructions should not be generated by hand, as the API provides
 * little protection against invalid configurations and is cumbersome for direct
 * use. Rather, they are intended as a target for higher-level APIs to emit in
 * order to prepare and direct experiment execution.
 * 
 * @author Elias N Vasylenko
 *
 * @param <T> the type of the {@link Executor#directRequirement() requirement}
 *            of the instruction
 */
public class Instruction<T extends Dependency> {
  private final Variables variables;
  private final Executor<T> executor;
  private final ExperimentPath<Absolute> path;

  public Instruction(ExperimentPath<Absolute> path, Variables variables, Executor<T> executor) {
    this.path = path;
    this.variables = variables;
    this.executor = executor;
  }

  public ExperimentPath<Absolute> path() {
    return path;
  }

  public Variables variables() {
    return variables;
  }

  public Executor<T> executor() {
    return executor;
  }

  public ExperimentId id() {
    return path().id(0);
  }
}
